[{"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/index.js":"1","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/App.js":"2","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/reportWebVitals.js":"3","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Footer.js":"4","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Header.js":"5","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/RedStarTracker.js":"6","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Star.js":"7","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/utilities/territories.js":"8","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/SearchDropdown.js":"9","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/PlayerDashboard.js":"10","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Setup.js":"11","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Recruitment.js":"12","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/MapTabs.js":"13","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Odds.js":"14","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/CombatRoll.js":"15","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/AmmoShortage.js":"16","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Bunker.js":"17","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/HQ.js":"18","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/BioHazard.js":"19","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Mercenary.js":"20","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Unlockables.js":"21","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/utilities/factions.js":"22","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/utilities/PlayerContext.js":"23"},{"size":548,"mtime":1610132109219,"results":"24","hashOfConfig":"25"},{"size":925,"mtime":1610470353536,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1608581700131,"results":"27","hashOfConfig":"25"},{"size":159,"mtime":1610466849172,"results":"28","hashOfConfig":"25"},{"size":1278,"mtime":1610466518597,"results":"29","hashOfConfig":"25"},{"size":525,"mtime":1609166436922,"results":"30","hashOfConfig":"25"},{"size":618,"mtime":1610466872666,"results":"31","hashOfConfig":"25"},{"size":20836,"mtime":1610396729066,"results":"32","hashOfConfig":"25"},{"size":401,"mtime":1609796266209,"results":"33","hashOfConfig":"34"},{"size":1712,"mtime":1610470494149,"results":"35","hashOfConfig":"25"},{"size":5693,"mtime":1610487415196,"results":"36","hashOfConfig":"25"},{"size":1294,"mtime":1610466969724,"results":"37","hashOfConfig":"25"},{"size":5337,"mtime":1610486799203,"results":"38","hashOfConfig":"25"},{"size":1643,"mtime":1610135194411,"results":"39","hashOfConfig":"25"},{"size":4546,"mtime":1610398429074,"results":"40","hashOfConfig":"25"},{"size":470,"mtime":1610396584798,"results":"41","hashOfConfig":"25"},{"size":478,"mtime":1610396456401,"results":"42","hashOfConfig":"25"},{"size":477,"mtime":1610396222223,"results":"43","hashOfConfig":"25"},{"size":475,"mtime":1610396588265,"results":"44","hashOfConfig":"25"},{"size":474,"mtime":1610396600256,"results":"45","hashOfConfig":"25"},{"size":3690,"mtime":1610421988292,"results":"46","hashOfConfig":"25"},{"size":5682,"mtime":1610124751418,"results":"47","hashOfConfig":"25"},{"size":653,"mtime":1610485273310,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1thquzx",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10s43cx",{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/index.js",[],["107","108"],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/App.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/reportWebVitals.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Footer.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Header.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/RedStarTracker.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Star.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/utilities/territories.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/SearchDropdown.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/PlayerDashboard.js",["109"],"import React, { useState, useContext } from 'react'\nimport { Card, CardTitle, Row, Col, Container } from 'reactstrap';\nimport RedStarTracker from './RedStarTracker'\nimport Recruitment from './Recruitment'\nimport MapTabs from './MapTabs';\nimport playerContext from '../utilities/PlayerContext';\n\nconst PlayerDashboard = (props) => {\n\n    //map through each continent within the territories JSON\n    //return array of territories objects\n\n    const { players } = useContext(playerContext)\n\n\n    return (\n        <Container className='mt-3'>\n            <Card>\n                <Row className=\"my-3 justify-content-center\">\n                    {players.map((item, idx) => {\n                        return (\n                            <Col key={idx} className='my-2'>\n                                <RedStarTracker player={item} />\n                            </Col>\n                        )\n                    })\n                    }\n                </Row>\n            </Card>\n            <Row className=\"mt-3\">\n                <Col sm=\"6\">\n                    {/* Territory Pane */}\n                    <Card body>\n                        <CardTitle tag=\"h5\">Territories</CardTitle>\n                        <MapTabs\n                            players={players}\n                        />\n                    </Card>\n                </Col>\n                <Col sm=\"6\">\n                    <Row>\n                        <Col>\n                            <Recruitment\n                                players={players}\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default PlayerDashboard;","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Setup.js",["110"],"import React, { useState, useContext } from 'react'\nimport { Row, Card, CardHeader, Container, Col, CardBody, Button, Label, Input } from 'reactstrap';\nimport { factions } from '../utilities/factions'\nimport playerContext from '../utilities/PlayerContext';\n\nconst Setup = (props) => {\n    const [draft, setDraft] = useState(false)\n\n    const { players, setPlayers } = useContext(playerContext)\n    const [numberOfPlayers, setNumberOfPlayers] = useState(3)\n    const [playersLocked, setPlayersLocked] = useState(false)\n\n    function addPlayer() {\n        setNumberOfPlayers(numberOfPlayers + 1)\n        let proxy = players\n        proxy.push({ id: players.length, name: \"\", faction: {} })\n        setPlayers(proxy)\n    }\n    \n    function removePlayer() {\n        setNumberOfPlayers(numberOfPlayers - 1)\n        let proxy = players\n        proxy.pop()\n        setPlayers(proxy)\n    }\n\n    return (\n        <Container className='mt-3'>\n            {/* # of Players */}\n            <Row className='justify-content-center my-3'>\n                <h3 className='mr-2'>Number of Players:</h3>\n                {\n                    numberOfPlayers > 3 ?\n                        <Button onClick={() => removePlayer()} className='mx-2 p-2'>-</Button>\n                        :\n                        <Button disabled className='mx-2 p-2'>-</Button>\n                }\n                <h3 className='my-1'>{numberOfPlayers}</h3>\n                {\n                    numberOfPlayers < 5 ?\n                        <Button onClick={() => addPlayer(numberOfPlayers + 1)} className='mx-2 p-2'>+</Button>\n                        :\n                        <Button disabled className='mx-2 p-2'>+</Button>\n                }\n            </Row>\n            {/* Names of Players */}\n            <Row>\n                {\n                    players.map((player, key) => {\n                        return (\n                            <Col key={key}>\n                                <Label>Player Name</Label>\n                                <Input required/>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n            {\n                !playersLocked ?\n                    <>\n                    {/* Submit button to lock in the player names */}\n                    <Button className='my-3' onClick={() => setPlayersLocked(true)}>Submit</Button>\n                    </>\n                    :\n                    <>\n                    <Button className='my-3' onClick={() => setPlayersLocked(false)}>Go Back</Button>\n                    {/* If draft has been unlocked (via founding all minor cities) then draft process commence, else pick in pre-determined order */}\n                        {\n                            draft ?\n                                //show draft cards and snake draft for Faction, Turn Order, HQ Placement Order, Starting Troops, Coin Cards\n                                <>\n                                    <h3>Draft True</h3>\n                                </>\n                                :\n                                <>\n                                    <h3>Draft False</h3>\n                                </>\n                            //Pick Order to select Faction, Turn Order, HQ Placement Order\n                        }\n                        <Row>\n                            {\n                                factions.map((faction, idx) => {\n                                    return (\n                                        <>\n                                            {\n                                                faction.unlocked &&\n                                                <Col className='col-6 mb-3' >\n                                                    <Card>\n                                                        <CardHeader>{faction.name}</CardHeader>\n                                                        <CardBody>\n                                                            <ul>\n                                                                {faction.bringerOfNuclearFire && <li className='mb-2'>Bringer of Nuclear Fire</li>}\n                                                                {faction.startingPower && <li className='mb-2'>{faction.startingPower[0]}</li>}\n                                                                {faction.startingPower && <li className='mb-2'>{faction.startingPower[1]}</li>}\n                                                                {faction.comebackPower && <li className='mb-2'>{faction.comebackPower}</li>}\n                                                                {faction.misslePower && <li className='mb-2'>{faction.misslePower}</li>}\n                                                                {faction.weakness && <li className='mb-2'>{faction.weakness}</li>}\n                                                                {faction.privateMission && <li className='mb-2'>{faction.privateMission}</li>}\n                                                            </ul>\n                                                        </CardBody>\n                                                    </Card>\n                                                </Col>\n                                            }\n                                        </>\n                                    )\n                                })\n                            }\n                        </Row>\n                        <Row>\n                            {\n\n                            }\n                        </Row>\n                    </>\n            }\n\n        </Container >\n    );\n};\n\nexport default Setup;","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Recruitment.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/MapTabs.js",["111"],"import React, { useState } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, ListGroup, ListGroupItem, Collapse, Card, CardHeader, Badge } from 'reactstrap';\nimport { worldMap } from '../utilities/territories'\nimport classnames from 'classnames';\nimport CombatRoll from './CombatRoll';\nimport AmmoShortage from './AmmoShortage';\nimport HQ from './HQ';\nimport Bunker from './Bunker';\nimport Mercenary from './Mercenary';\nimport BioHazard from './BioHazard';\n\nconst MapTabs = (props) => {\n    const [activeTab, setActiveTab] = useState('1');\n    const toggle = tab => { if (activeTab !== tab) setActiveTab(tab); }\n    const [toggleCollapse, setToggleCollapse] = useState(-1);\n\n    function toggleAccordian(id) {\n        if (toggleCollapse == id) {\n            setToggleCollapse(-1)\n        }\n        else {\n            setToggleCollapse(id)\n        }\n    }\n\n\n    return (\n        <>\n            <Nav tabs>\n                <NavItem>\n                    <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { toggle('1'); }}>Group by Continent</NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { toggle('2'); }}>Group by Player</NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <Row>\n                        <Col sm=\"12\">\n                            {\n                                worldMap.map((item, idx) => {\n                                    return (\n                                        <>\n                                            <Card key={idx}>\n                                                <CardHeader onClick={() => toggleAccordian(idx)}>\n                                                    <h5>{item.continent} <Badge className=\"text-light rounded-pill bg-secondary ml-3\">{item.bonus}</Badge></h5>\n                                                </CardHeader>\n                                                <Collapse isOpen={toggleCollapse === idx ? true : false}>\n                                                    <ListGroup>\n                                                        {\n                                                            item.territories.map((i, key) => {\n                                                                return (\n                                                                    <ListGroupItem key={key}>\n                                                                        <h5>\n                                                                            {i.name}\n                                                                            <HQ hq={i.hq} />\n                                                                            <Bunker bunker={i.bunker} />\n                                                                            <AmmoShortage ammoShortage={i.ammoShortage} />\n                                                                            <Mercenary mercenary={i.mercenary} />\n                                                                            <BioHazard bioHazard={i.bioHazard} />\n                                                                            <CombatRoll />\n                                                                        </h5>\n                                                                    </ListGroupItem>\n                                                                )\n                                                            })\n                                                        }\n                                                    </ListGroup>\n                                                </Collapse>\n                                            </Card>\n                                        </>\n                                    )\n                                })\n                            }\n                        </Col>\n                    </Row>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <Row>\n                        <Col sm=\"12\">\n                            {\n                                props.players.map((player, idx) => {\n                                    return (\n                                        <>\n                                            <Card key={idx}>\n                                                <CardHeader onClick={() => setToggleCollapse(idx)}>\n                                                    <h5>{player.name}</h5>\n                                                </CardHeader>\n                                                <Collapse isOpen={toggleCollapse === idx ? true : false}>\n                                                    <ListGroup>\n                                                    </ListGroup>\n                                                </Collapse>\n                                            </Card>\n                                        </>\n                                    )\n                                })\n                            }\n                        </Col>\n                    </Row>\n                </TabPane>\n            </TabContent>\n        </>\n    );\n}\n\nexport default MapTabs;","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Odds.js",["112"],"import React, { useState } from 'react';\nimport { Row, Col, Label, Progress } from 'reactstrap';\n\nconst Odds = (props) => {\n    const [battleSelected, setBattleSelected] = useState(true)\n\n    return (\n        <>\n            <Row>\n                <Col className='text-center text-success'>\n                    <Label >Defender Loses 2</Label>\n                </Col>\n                <Col className='text-center text-warning'>\n                    <Label >Both Lose 1</Label>\n                </Col>\n                <Col className='text-center text-danger'>\n                    <Label >Attacker Loses 2</Label>\n                </Col>\n            </Row>\n            {\n                battleSelected ? \n                <Row>\n                    <Col>\n                        <Progress className='m-3' multi>\n                            <Progress bar color=\"success\" value=\"55\">55%</Progress>\n                            <Progress bar color=\"warning\" value=\"10\">10%</Progress>\n                            <Progress bar color=\"danger\" value=\"35\">35%</Progress>\n                        </Progress>\n                    </Col>\n                </Row>\n                :\n                <Row>\n                    <Col>\n                        <Progress className='m-3' multi>\n                            <Progress bar color=\"success\" value=\"0\"></Progress>\n                            <Progress bar color=\"warning\" value=\"0\"></Progress>\n                            <Progress bar color=\"danger\" value=\"0\"></Progress>\n                        </Progress>\n                    </Col>\n                </Row>\n            }\n        </>\n    );\n};\n\nexport default Odds;","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/CombatRoll.js",["113","114"],"import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDiceD6 } from '@fortawesome/free-solid-svg-icons'\nimport { Button, Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from 'reactstrap';\nimport { worldMap } from '../utilities/territories'\nimport Select from \"react-select\";\nimport Bunker from './Bunker';\nimport AmmoShortage from './AmmoShortage';\nimport Odds from './Odds';\n\nconst CombatRoll = (props) => {\n    const [battleground, setBattleground] = useState('');\n    const [attackingFrom, setAttackingFrom] = useState('');\n    const [modal, setModal] = useState(false);\n    {/* players will need to be moved to a useContext helper that is populated from Austin's new game modal */ }\n    const { className } = props;\n    const toggle = () => setModal(!modal);\n    return (\n        <>\n            <Button className='mx-3 bg-white border-0' onClick={toggle}>\n                <FontAwesomeIcon className='p-0 fa-2x text-dark' icon={faDiceD6} />\n            </Button>\n            <Modal isOpen={modal} size='lg' toggle={toggle} className={className}>\n                <ModalHeader toggle={toggle}></ModalHeader>\n                <ModalBody>\n                    <>\n                        <Odds />\n                        <Row>\n                            <Col className=\"justify-content-center\">\n                                <Label>Battleground</Label>\n                                <Select\n                                    className=\"text-dark\"\n                                    defaultValue={'Select...'}\n                                    onChange={setBattleground}\n                                    options={worldMap}\n                                />\n                            </Col>\n                            <Col className=\"justify-content-center\">\n                                <Label>Attacking From</Label>\n                                {battleground ?\n                                    <Select\n                                        className=\"text-dark\"\n                                        defaultValue={'Select Battleground First'}\n                                        onChange={setAttackingFrom}\n                                        //needs to only display the adjacent territories to the selected battleground (part of the territory object)\n                                        options={worldMap}\n                                    />\n                                    :\n                                    <Select\n                                        disabled\n                                        className=\"text-dark\"\n                                        defaultValue={'Pick Battleground'}\n                                        onChange={setAttackingFrom}\n                                        //needs to only display the adjacent territories to the selected battleground (part of the territory object)\n                                        options={worldMap}\n                                    />\n\n                                }\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"justify-content-center\">\n                                <Label>Defender</Label>\n                                <Input></Input>\n                            </Col>\n                            <Col className=\"justify-content-center\">\n                                <Label>Attacker</Label>\n                                <Input></Input>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='justify-content-center col-6'>\n                                <Bunker\n                                    battleground={battleground}\n                                />\n                                <AmmoShortage\n                                    battleground={battleground}\n                                />\n                            </Col>\n                            <Col className='col-6'>\n                            </Col>\n                        </Row>\n                    </>\n                </ModalBody>\n                <ModalFooter className=\"justify-content-center\">\n                    <Button color=\"primary\" onClick={toggle}>Roll</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Retreat</Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nexport default CombatRoll","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/AmmoShortage.js",["115"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBan } from '@fortawesome/free-solid-svg-icons'\n\nconst AmmoShortage = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.ammoShortage &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={'red'} icon={faBan} />\n            }\n        </>\n    )\n}\n\nexport default AmmoShortage","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Bunker.js",["116"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFortAwesomeAlt } from '@fortawesome/free-brands-svg-icons'\n\nconst Bunker = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.bunker &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-3x' color={'orange'} icon={faFortAwesomeAlt} />\n            }\n        </>\n    )\n}\n\nexport default Bunker","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/HQ.js",["117"],"import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst HQ = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.hq &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={props.player.color} icon={faUserPlus} />            \n            }\n        </>\n    )\n}\n\nexport default HQ","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/BioHazard.js",["118"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBiohazard } from '@fortawesome/free-solid-svg-icons'\n\nconst BioHazard = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.bioHazard &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={'green'} icon={faBiohazard} />\n            }\n        </>\n    )\n}\n\nexport default BioHazard","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Mercenary.js",["119"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst Mercenary = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.mercenary &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={'black'} icon={faUserPlus} />\n\n            }\n        </>\n    )\n}\n\nexport default Mercenary","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/Components/Unlockables.js",["120","121","122"],"import React, { useState } from 'react'\nimport { Card, CardHeader, Container, Row, Col, CardBody, CardFooter, Button } from 'reactstrap';\n\nconst Unlockables = (props) => {\n    {/* players will need to be moved to a useContext helper that is populated from Austin's new game modal */ }\n\n    return (\n        <Container className='mt-3'>\n            <Row>\n                <div className='card-deck'>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Founded all 9 minor cities.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    First Time a Faction is Eliminated from the Game.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When Three Missiles Are Used On the Same Combat Roll.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When The World Capital Mark Is About To Go On The Board.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When One Person Gets to Sign the Board For A Second Time.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When Someone Is About To Place 30+ Troops On The Board And Has A Missile.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n\n                        </Card>\n                    </Col>\n                </div>\n\n            </Row>\n\n\n        </Container>\n    );\n};\n\nexport default Unlockables;","/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/utilities/factions.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-companion-app/src/utilities/PlayerContext.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"131","line":7,"column":19,"nodeType":"129","messageId":"130","endLine":7,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":18,"column":28,"nodeType":"134","messageId":"135","endLine":18,"endColumn":30},{"ruleId":"127","severity":1,"message":"136","line":5,"column":28,"nodeType":"129","messageId":"130","endLine":5,"endColumn":45},{"ruleId":"127","severity":1,"message":"137","line":13,"column":12,"nodeType":"129","messageId":"130","endLine":13,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":15,"column":5,"nodeType":"140","messageId":"141","endLine":15,"endColumn":113},{"ruleId":"127","severity":1,"message":"142","line":6,"column":18,"nodeType":"129","messageId":"130","endLine":6,"endColumn":25},{"ruleId":"127","severity":1,"message":"142","line":6,"column":18,"nodeType":"129","messageId":"130","endLine":6,"endColumn":25},{"ruleId":"127","severity":1,"message":"142","line":6,"column":18,"nodeType":"129","messageId":"130","endLine":6,"endColumn":25},{"ruleId":"127","severity":1,"message":"142","line":6,"column":18,"nodeType":"129","messageId":"130","endLine":6,"endColumn":25},{"ruleId":"127","severity":1,"message":"142","line":6,"column":18,"nodeType":"129","messageId":"130","endLine":6,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"143","line":2,"column":16,"nodeType":"129","messageId":"130","endLine":2,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":5,"column":5,"nodeType":"140","messageId":"141","endLine":5,"endColumn":113},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setDraft' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setBattleSelected' is assigned a value but never used.","'attackingFrom' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setTest' is assigned a value but never used.","'CardHeader' is defined but never used.","no-global-assign","no-unsafe-negation"]